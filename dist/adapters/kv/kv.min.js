!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e((t="undefined"!=typeof globalThis?globalThis:t||self)["xwebdb-kvadapter"]={})}(this,(function(t){"use strict";class e{constructor(t=1){this._queue=[],this._pause=!1,this._ongoingCount=0,this._concurrency=1,this._resolveEmpty=()=>Promise.resolve(),this._concurrency=t}pause(){this._pause=!0}start(){this._pause=!1,this._next()}add(t){return new Promise(((e,s)=>{const i=async()=>{this._ongoingCount++;try{const s=await Promise.resolve().then(t);return this._ongoingCount--,this._next(),e(s),s}catch(t){return this._ongoingCount--,this._next(),s(t),null}};this._ongoingCount<this._concurrency&&!this._pause?i():this._queue.push(i)}))}get waitingCount(){return this._queue.length}get ongoingCount(){return this._ongoingCount}_next(){if(!(this._ongoingCount>=this._concurrency||this._pause))if(this._queue.length>0){const t=this._queue.shift();t&&t()}else this._resolveEmpty()}}const s={};async function i(t,e="GET",s="",i,n=!0){return new Promise((r=>{var o=new XMLHttpRequest;o.addEventListener("readystatechange",(function(){if(4===this.readyState){if(!1===n)return r(this.responseText);try{let t=JSON.parse(this.responseText);r(t)}catch(t){r(this.responseText)}}})),o.open(e,(t.endpoint+"/"+s).replace(/(https?:\/{2}.*)\/{2}/,"$1/").replace(/\/$/,"")),o.setRequestHeader("Authorization",`Bearer ${t.token}`),o.setRequestHeader("Content-Type","application/json"),o.send(i)}))}class n{constructor({name:t,token:e,endpoint:s}){this.id="",this.name=t,this.token=e,this.endpoint=s,this.connect()}async connect(){if(s[this.endpoint]||(s[this.endpoint]={}),s[this.endpoint][this.name])return void(this.id=s[this.endpoint][this.name]);const t=await this.listStores();for(let e=0;e<t.length;e++){const i=t[e];s[this.endpoint][i.name]=i.id}if(s[this.endpoint][this.name])return void(this.id=s[this.endpoint][this.name]);const e=await this.createStore(this.name);s[this.endpoint][this.name]=e,this.id=e}async listStores(){const t=[];let e=1,s=1;for(;s>=e;){const n=await i(this,"GET",`?page=${e}`);if("string"==typeof n||!n.success||!Array.isArray(n.result))throw new Error("XWebDB: Error while listing namespaces: "+JSON.stringify(n));{const i=n.result;for(let e=0;e<i.length;e++){const s=i[e];t.push({id:s.id,name:s.title})}s=n.result_info.total_pages,e++}}return t}async createStore(t){const e=await i(this,"POST","",JSON.stringify({title:t}));if("string"==typeof e||!e.success||Array.isArray(e.result))throw new Error("XWebDB: Error while creating namespace: "+JSON.stringify(e));return e.result.id}async clear(){this.id||await this.connect();const t=await i(this,"DELETE",this.id);if("string"!=typeof t&&t.success)return!0;throw new Error("XWebDB: Error while deleting namespace: "+JSON.stringify(t))}async del(t){this.id||await this.connect();const e=await i(this,"DELETE",`${this.id}/values/${t}`);if("string"!=typeof e&&e.success)return!0;throw new Error("XWebDB: Error while deleting item: "+JSON.stringify(e))}async set(t,e){this.id||await this.connect();const s=await i(this,"PUT",`${this.id}/values/${t}`,e);if("string"!=typeof s&&s.success)return!0;throw new Error("XWebDB: Error while setting item: "+JSON.stringify(s))}async get(t){this.id||await this.connect();const e=await i(this,"GET",`${this.id}/values/${t}`,void 0,!1);if("string"!=typeof e)throw new Error("XWebDB: Error while getting item: "+JSON.stringify(e));return e}async keys(){this.id||await this.connect();let t=[],e="";do{const s=await i(this,"GET",`${this.id}/keys${e?`?cursor=${e}`:""}`);if("string"==typeof s||!s.success||!Array.isArray(s.result))throw new Error("XWebDB: Error while listing keys: "+JSON.stringify(s));{const i=s.result;for(let e=0;e<i.length;e++){const s=i[e];t.push(s.name)}e=s.result_info.cursor}}while(e);return t}async delBulk(t){this.id||await this.connect();const e=t.reduce(((t,e,s)=>{const i=Math.floor(s/9999);return t[i]||(t[i]=[]),t[i].push(e),t}),[]);let s=[];for(let t=0;t<e.length;t++){const n=e[t],r=await i(this,"DELETE",`${this.id}/bulk`,JSON.stringify(n));if("string"==typeof r||!r.success)throw new Error("XWebDB: Error while deleting item: "+JSON.stringify(r));s.push(!0)}return s}async setBulk(t){this.id||await this.connect();const e=t.reduce(((t,e,s)=>{const i=Math.floor(s/9999);return t[i]||(t[i]=[]),t[i].push(e),t}),[]);let s=[];for(let t=0;t<e.length;t++){const n=e[t],r=await i(this,"PUT",`${this.id}/bulk`,JSON.stringify(n.map((t=>({key:t[0],value:t[1]})))));if("string"==typeof r||!r.success)throw new Error("XWebDB: Error while deleting item: "+JSON.stringify(r));s.push(!0)}return s}async getBulk(t){if(0===t.length)return[];const s=new e(20),i=[];for(let e=0;e<t.length;e++){const n=t[e];i.push(s.add((()=>this.get(n))))}const n=await Promise.all(i),r=[];for(let e=0;e<t.length;e++){let t=n[e];r.push(t)}return r}}t.kvAdapter=(t,e)=>s=>new n({endpoint:t,token:e,name:s}),Object.defineProperty(t,"__esModule",{value:!0})}));